// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Shader Graphs/SlimeTrail" {
Properties {
 Color_9f4daec392f74a02a7064da9f3c2d9b3 ("dark", Color) = (0.006698,0.169811,0.000000,0.000000)
 Color_009982248fff4eebb59edd722cd69bc9 ("light", Color) = (0.262358,0.490566,0.229085,0.000000)
[HideInInspector] [NoScaleOffset]  unity_Lightmaps ("unity_Lightmaps", 2DArray) = "" { }
[HideInInspector] [NoScaleOffset]  unity_LightmapsInd ("unity_LightmapsInd", 2DArray) = "" { }
[HideInInspector] [NoScaleOffset]  unity_ShadowMasks ("unity_ShadowMasks", 2DArray) = "" { }
}
SubShader { 
 Tags { "QUEUE"="Geometry" "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Unlit" }


 // Stats for Vertex shader:
 //        d3d11: 15 math
 // Stats for Fragment shader:
 //        d3d11: 188 math, 2 branch
 Pass {
  Name "Pass"
  Tags { "QUEUE"="Geometry" "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Unlit" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[72].xyzw
   8: dp3 r0.x, v1.xyzx, cb1[4].xyzx
   9: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  10: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  11: dp3 r0.w, r0.xyzx, r0.xyzx
  12: max r0.w, r0.w, l(0.000000)
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o2.xyzw, v3.xyzw
  16: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 188 math, 5 temp registers, 2 branches
Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Vector4 Color_9f4daec392f74a02a7064da9f3c2d9b3 at 0
  Vector4 Color_009982248fff4eebb59edd722cd69bc9 at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: dp3 r0.x, v1.xyzx, v1.xyzx
   1: sqrt r0.x, r0.x
   2: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
   3: mul r0.xyz, r0.xxxx, v1.xyzx
   4: dp3 r0.w, r0.xyzx, r0.xyzx
   5: rsq r0.w, r0.w
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: dp3 r0.w, cb0[13].xyzx, cb0[13].xyzx
   8: rsq r0.w, r0.w
   9: mul r1.xyz, r0.wwww, cb0[13].xyzx
  10: dp3_sat r0.x, r0.xyzx, r1.xyzx
  11: add r0.x, -r0.x, l(1.000000)
  12: log r0.x, r0.x
  13: mul r0.x, r0.x, l(8.100000)
  14: exp r0.x, r0.x
  15: mul r0.x, r0.x, l(7.600000)
  16: mul r0.yz, v2.xxyx, l(0.000000, 6.000000, 6.000000, 0.000000)
  17: round_ni r1.xy, r0.yzyy
  18: frc r0.yz, r0.yyzy
  19: mov r1.zw, l(0,0,0,8.000000)
  20: mov r0.w, l(-1)
  21: loop 
  22:   ilt r2.x, l(1), r0.w
  23:   breakc_nz r2.x
  24:   itof r2.y, r0.w
  25:   mov r2.zw, r1.zzzw
  26:   mov r3.x, l(-1)
  27:   loop 
  28:     ilt r3.y, l(1), r3.x
  29:     breakc_nz r3.y
  30:     itof r2.x, r3.x
  31:     add r3.yz, r1.xxyx, r2.xxyx
  32:     dp2 r3.w, r3.yzyy, l(15.270000, 99.410004, 0.000000, 0.000000)
  33:     dp2 r3.y, r3.yzyy, l(47.630001, 89.980003, 0.000000, 0.000000)
  34:     sincos r4.xy, null, r3.ywyy
  35:     frc r3.yz, r4.xxyx
  36:     mul r3.yz, r3.yyzy, l(0.000000, 23.950001, 23.950001, 0.000000)
  37:     sincos r3.y, null, r3.y
  38:     mad r4.x, r3.y, l(0.500000), r2.x
  39:     sincos null, r2.x, r3.z
  40:     mad r4.y, r2.x, l(0.500000), r2.y
  41:     add r3.yz, -r0.yyzy, r4.xxyx
  42:     add r3.yz, r3.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  43:     dp2 r2.x, r3.yzyy, r3.yzyy
  44:     sqrt r2.x, r2.x
  45:     lt r3.y, r2.x, r2.w
  46:     movc r2.zw, r3.yyyy, r2.xxxx, r2.zzzw
  47:     iadd r3.x, r3.x, l(1)
  48:   endloop 
  49:   mov r1.zw, r2.zzzw
  50:   iadd r0.w, r0.w, l(1)
  51: endloop 
  52: mul r0.x, r0.x, r1.z
  53: mul r0.x, r0.x, l(0.360000)
  54: min r0.x, r0.x, l(1.000000)
  55: add r0.y, -r0.x, l(1.000000)
  56: dp3 r0.y, r0.yyyy, r0.yyyy
  57: sqrt r0.y, r0.y
  58: add r0.y, r0.y, l(-1.730000)
  59: mul_sat r0.y, r0.y, l(100000.000000)
  60: add r0.xzw, r0.xxxx, -cb1[0].xxyz
  61: mad r0.xyz, r0.yyyy, r0.xzwx, cb1[0].xyzx
  62: dp3 r0.w, -r0.xyzx, -r0.xyzx
  63: sqrt r0.w, r0.w
  64: mul r0.w, r0.w, l(33.333336)
  65: min r0.w, r0.w, l(1.000000)
  66: add r0.xyz, r0.xyzx, -cb1[1].xyzx
  67: mad r0.xyz, r0.wwww, r0.xyzx, cb1[1].xyzx
  68: mul r1.xy, r0.xyxx, l(-695.000000, -695.000000, 0.000000, 0.000000)
  69: round_ni r1.zw, r1.xxxy
  70: frc r1.xy, r1.xyxx
  71: mul r2.xyzw, r1.zwzw, l(289.000000, 289.000000, 289.000000, 289.000000)
  72: ge r2.xyzw, r2.xyzw, -r2.zwzw
  73: movc r2.xyzw, r2.xyzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
  74: mul r2.zw, r1.zzzw, r2.zzzw
  75: frc r2.zw, r2.zzzw
  76: mul r2.xy, r2.zwzz, r2.xyxx
  77: mad r0.w, r2.x, l(34.000000), l(1.000000)
  78: mul r0.w, r2.x, r0.w
  79: mul r2.x, r0.w, l(289.000000)
  80: ge r2.x, r2.x, -r2.x
  81: movc r2.xz, r2.xxxx, l(289.000000,0,0.003460,0), l(-289.000000,0,-0.003460,0)
  82: mul r0.w, r0.w, r2.z
  83: frc r0.w, r0.w
  84: mad r0.w, r2.x, r0.w, r2.y
  85: mad r2.x, r0.w, l(34.000000), l(1.000000)
  86: mul r0.w, r0.w, r2.x
  87: mul r2.x, r0.w, l(289.000000)
  88: ge r2.x, r2.x, -r2.x
  89: movc r2.xy, r2.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
  90: mul r0.w, r0.w, r2.y
  91: frc r0.w, r0.w
  92: mul r0.w, r0.w, r2.x
  93: mul r0.w, r0.w, l(0.024390)
  94: frc r0.w, r0.w
  95: mad r2.xy, r0.wwww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -0.500000, 0.000000, 0.000000)
  96: round_ni r0.w, r2.y
  97: add r3.x, -r0.w, r2.x
  98: add r3.y, |r2.x|, l(-0.500000)
  99: dp2 r0.w, r3.xyxx, r3.xyxx
 100: rsq r0.w, r0.w
 101: mul r2.xy, r0.wwww, r3.xyxx
 102: dp2 r0.w, r2.xyxx, r1.xyxx
 103: add r2.xyzw, r1.zwzw, l(0.000000, 1.000000, 1.000000, 0.000000)
 104: mul r3.xyzw, r2.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
 105: ge r3.xyzw, r3.xyzw, -r3.xyzw
 106: movc r4.xyzw, r3.xyxy, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 107: mul r2.xy, r2.xyxx, r4.zwzz
 108: frc r2.xy, r2.xyxx
 109: mul r2.xy, r2.xyxx, r4.xyxx
 110: mad r3.x, r2.x, l(34.000000), l(1.000000)
 111: mul r2.x, r2.x, r3.x
 112: mul r3.x, r2.x, l(289.000000)
 113: ge r3.x, r3.x, -r3.x
 114: movc r3.xy, r3.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 115: mul r2.x, r2.x, r3.y
 116: frc r2.x, r2.x
 117: mad r2.x, r3.x, r2.x, r2.y
 118: mad r2.y, r2.x, l(34.000000), l(1.000000)
 119: mul r2.x, r2.x, r2.y
 120: mul r2.y, r2.x, l(289.000000)
 121: ge r2.y, r2.y, -r2.y
 122: movc r3.xy, r2.yyyy, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 123: mul r2.x, r2.x, r3.y
 124: frc r2.x, r2.x
 125: mul r2.x, r2.x, r3.x
 126: mul r2.x, r2.x, l(0.024390)
 127: frc r2.x, r2.x
 128: mad r2.xy, r2.xxxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -0.500000, 0.000000, 0.000000)
 129: round_ni r2.y, r2.y
 130: add r3.x, -r2.y, r2.x
 131: add r3.y, |r2.x|, l(-0.500000)
 132: dp2 r2.x, r3.xyxx, r3.xyxx
 133: rsq r2.x, r2.x
 134: mul r2.xy, r2.xxxx, r3.xyxx
 135: add r4.xyzw, r1.xyxy, l(-0.000000, -1.000000, -1.000000, -0.000000)
 136: dp2 r2.x, r2.xyxx, r4.xyxx
 137: movc r3.xyzw, r3.zwzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 138: mul r2.yz, r2.zzwz, r3.zzwz
 139: frc r2.yz, r2.yyzy
 140: mul r2.yz, r2.yyzy, r3.xxyx
 141: mad r2.w, r2.y, l(34.000000), l(1.000000)
 142: mul r2.y, r2.y, r2.w
 143: mul r2.w, r2.y, l(289.000000)
 144: ge r2.w, r2.w, -r2.w
 145: movc r3.xy, r2.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 146: mul r2.y, r2.y, r3.y
 147: frc r2.y, r2.y
 148: mad r2.y, r3.x, r2.y, r2.z
 149: mad r2.z, r2.y, l(34.000000), l(1.000000)
 150: mul r2.y, r2.y, r2.z
 151: mul r2.z, r2.y, l(289.000000)
 152: ge r2.z, r2.z, -r2.z
 153: movc r2.zw, r2.zzzz, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 154: mul r2.y, r2.w, r2.y
 155: frc r2.y, r2.y
 156: mul r2.y, r2.y, r2.z
 157: mul r2.y, r2.y, l(0.024390)
 158: frc r2.y, r2.y
 159: mad r2.yz, r2.yyyy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -0.500000, 0.000000)
 160: round_ni r2.z, r2.z
 161: add r3.x, -r2.z, r2.y
 162: add r3.y, |r2.y|, l(-0.500000)
 163: dp2 r2.y, r3.xyxx, r3.xyxx
 164: rsq r2.y, r2.y
 165: mul r2.yz, r2.yyyy, r3.xxyx
 166: dp2 r2.y, r2.yzyy, r4.zwzz
 167: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 168: mul r3.xyzw, r1.zwzw, l(289.000000, 289.000000, 289.000000, 289.000000)
 169: ge r3.xyzw, r3.xyzw, -r3.zwzw
 170: movc r3.xyzw, r3.xyzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 171: mul r1.zw, r1.zzzw, r3.zzzw
 172: frc r1.zw, r1.zzzw
 173: mul r1.zw, r1.zzzw, r3.xxxy
 174: mad r2.z, r1.z, l(34.000000), l(1.000000)
 175: mul r1.z, r1.z, r2.z
 176: mul r2.z, r1.z, l(289.000000)
 177: ge r2.z, r2.z, -r2.z
 178: movc r2.zw, r2.zzzz, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 179: mul r1.z, r1.z, r2.w
 180: frc r1.z, r1.z
 181: mad r1.z, r2.z, r1.z, r1.w
 182: mad r1.w, r1.z, l(34.000000), l(1.000000)
 183: mul r1.z, r1.z, r1.w
 184: mul r1.w, r1.z, l(289.000000)
 185: ge r1.w, r1.w, -r1.w
 186: movc r2.zw, r1.wwww, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 187: mul r1.z, r1.z, r2.w
 188: frc r1.z, r1.z
 189: mul r1.z, r1.z, r2.z
 190: mul r1.z, r1.z, l(0.024390)
 191: frc r1.z, r1.z
 192: mad r1.zw, r1.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -0.500000)
 193: round_ni r1.w, r1.w
 194: add r3.x, -r1.w, r1.z
 195: add r3.y, |r1.z|, l(-0.500000)
 196: dp2 r1.z, r3.xyxx, r3.xyxx
 197: rsq r1.z, r1.z
 198: mul r1.zw, r1.zzzz, r3.xxxy
 199: add r2.zw, r1.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
 200: dp2 r1.z, r1.zwzz, r2.zwzz
 201: mul r2.zw, r1.xxxy, r1.xxxy
 202: mul r2.zw, r1.xxxy, r2.zzzw
 203: mad r3.xy, r1.xyxx, l(6.000000, 6.000000, 0.000000, 0.000000), l(-15.000000, -15.000000, 0.000000, 0.000000)
 204: mad r1.xy, r1.xyxx, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
 205: mul r1.xy, r1.xyxx, r2.zwzz
 206: add r1.w, -r0.w, r2.x
 207: mad r0.w, r1.y, r1.w, r0.w
 208: add r1.z, -r2.y, r1.z
 209: mad r1.y, r1.y, r1.z, r2.y
 210: add r1.y, -r0.w, r1.y
 211: mad r0.w, r1.x, r1.y, r0.w
 212: add r0.w, r0.w, l(0.500000)
 213: mul o0.xyz, r0.wwww, r0.xyzx
 214: mov o0.w, l(1.000000)
 215: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[72].xyzw
   8: dp3 r0.x, v1.xyzx, cb1[4].xyzx
   9: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  10: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  11: dp3 r0.w, r0.xyzx, r0.xyzx
  12: max r0.w, r0.w, l(0.000000)
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o2.xyzw, v3.xyzw
  16: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 188 math, 5 temp registers, 2 branches
Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Vector4 Color_9f4daec392f74a02a7064da9f3c2d9b3 at 0
  Vector4 Color_009982248fff4eebb59edd722cd69bc9 at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: dp3 r0.x, v1.xyzx, v1.xyzx
   1: sqrt r0.x, r0.x
   2: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
   3: mul r0.xyz, r0.xxxx, v1.xyzx
   4: dp3 r0.w, r0.xyzx, r0.xyzx
   5: rsq r0.w, r0.w
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: dp3 r0.w, cb0[13].xyzx, cb0[13].xyzx
   8: rsq r0.w, r0.w
   9: mul r1.xyz, r0.wwww, cb0[13].xyzx
  10: dp3_sat r0.x, r0.xyzx, r1.xyzx
  11: add r0.x, -r0.x, l(1.000000)
  12: log r0.x, r0.x
  13: mul r0.x, r0.x, l(8.100000)
  14: exp r0.x, r0.x
  15: mul r0.x, r0.x, l(7.600000)
  16: mul r0.yz, v2.xxyx, l(0.000000, 6.000000, 6.000000, 0.000000)
  17: round_ni r1.xy, r0.yzyy
  18: frc r0.yz, r0.yyzy
  19: mov r1.zw, l(0,0,0,8.000000)
  20: mov r0.w, l(-1)
  21: loop 
  22:   ilt r2.x, l(1), r0.w
  23:   breakc_nz r2.x
  24:   itof r2.y, r0.w
  25:   mov r2.zw, r1.zzzw
  26:   mov r3.x, l(-1)
  27:   loop 
  28:     ilt r3.y, l(1), r3.x
  29:     breakc_nz r3.y
  30:     itof r2.x, r3.x
  31:     add r3.yz, r1.xxyx, r2.xxyx
  32:     dp2 r3.w, r3.yzyy, l(15.270000, 99.410004, 0.000000, 0.000000)
  33:     dp2 r3.y, r3.yzyy, l(47.630001, 89.980003, 0.000000, 0.000000)
  34:     sincos r4.xy, null, r3.ywyy
  35:     frc r3.yz, r4.xxyx
  36:     mul r3.yz, r3.yyzy, l(0.000000, 23.950001, 23.950001, 0.000000)
  37:     sincos r3.y, null, r3.y
  38:     mad r4.x, r3.y, l(0.500000), r2.x
  39:     sincos null, r2.x, r3.z
  40:     mad r4.y, r2.x, l(0.500000), r2.y
  41:     add r3.yz, -r0.yyzy, r4.xxyx
  42:     add r3.yz, r3.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  43:     dp2 r2.x, r3.yzyy, r3.yzyy
  44:     sqrt r2.x, r2.x
  45:     lt r3.y, r2.x, r2.w
  46:     movc r2.zw, r3.yyyy, r2.xxxx, r2.zzzw
  47:     iadd r3.x, r3.x, l(1)
  48:   endloop 
  49:   mov r1.zw, r2.zzzw
  50:   iadd r0.w, r0.w, l(1)
  51: endloop 
  52: mul r0.x, r0.x, r1.z
  53: mul r0.x, r0.x, l(0.360000)
  54: min r0.x, r0.x, l(1.000000)
  55: add r0.y, -r0.x, l(1.000000)
  56: dp3 r0.y, r0.yyyy, r0.yyyy
  57: sqrt r0.y, r0.y
  58: add r0.y, r0.y, l(-1.730000)
  59: mul_sat r0.y, r0.y, l(100000.000000)
  60: add r0.xzw, r0.xxxx, -cb1[0].xxyz
  61: mad r0.xyz, r0.yyyy, r0.xzwx, cb1[0].xyzx
  62: dp3 r0.w, -r0.xyzx, -r0.xyzx
  63: sqrt r0.w, r0.w
  64: mul r0.w, r0.w, l(33.333336)
  65: min r0.w, r0.w, l(1.000000)
  66: add r0.xyz, r0.xyzx, -cb1[1].xyzx
  67: mad r0.xyz, r0.wwww, r0.xyzx, cb1[1].xyzx
  68: mul r1.xy, r0.xyxx, l(-695.000000, -695.000000, 0.000000, 0.000000)
  69: round_ni r1.zw, r1.xxxy
  70: frc r1.xy, r1.xyxx
  71: mul r2.xyzw, r1.zwzw, l(289.000000, 289.000000, 289.000000, 289.000000)
  72: ge r2.xyzw, r2.xyzw, -r2.zwzw
  73: movc r2.xyzw, r2.xyzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
  74: mul r2.zw, r1.zzzw, r2.zzzw
  75: frc r2.zw, r2.zzzw
  76: mul r2.xy, r2.zwzz, r2.xyxx
  77: mad r0.w, r2.x, l(34.000000), l(1.000000)
  78: mul r0.w, r2.x, r0.w
  79: mul r2.x, r0.w, l(289.000000)
  80: ge r2.x, r2.x, -r2.x
  81: movc r2.xz, r2.xxxx, l(289.000000,0,0.003460,0), l(-289.000000,0,-0.003460,0)
  82: mul r0.w, r0.w, r2.z
  83: frc r0.w, r0.w
  84: mad r0.w, r2.x, r0.w, r2.y
  85: mad r2.x, r0.w, l(34.000000), l(1.000000)
  86: mul r0.w, r0.w, r2.x
  87: mul r2.x, r0.w, l(289.000000)
  88: ge r2.x, r2.x, -r2.x
  89: movc r2.xy, r2.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
  90: mul r0.w, r0.w, r2.y
  91: frc r0.w, r0.w
  92: mul r0.w, r0.w, r2.x
  93: mul r0.w, r0.w, l(0.024390)
  94: frc r0.w, r0.w
  95: mad r2.xy, r0.wwww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -0.500000, 0.000000, 0.000000)
  96: round_ni r0.w, r2.y
  97: add r3.x, -r0.w, r2.x
  98: add r3.y, |r2.x|, l(-0.500000)
  99: dp2 r0.w, r3.xyxx, r3.xyxx
 100: rsq r0.w, r0.w
 101: mul r2.xy, r0.wwww, r3.xyxx
 102: dp2 r0.w, r2.xyxx, r1.xyxx
 103: add r2.xyzw, r1.zwzw, l(0.000000, 1.000000, 1.000000, 0.000000)
 104: mul r3.xyzw, r2.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
 105: ge r3.xyzw, r3.xyzw, -r3.xyzw
 106: movc r4.xyzw, r3.xyxy, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 107: mul r2.xy, r2.xyxx, r4.zwzz
 108: frc r2.xy, r2.xyxx
 109: mul r2.xy, r2.xyxx, r4.xyxx
 110: mad r3.x, r2.x, l(34.000000), l(1.000000)
 111: mul r2.x, r2.x, r3.x
 112: mul r3.x, r2.x, l(289.000000)
 113: ge r3.x, r3.x, -r3.x
 114: movc r3.xy, r3.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 115: mul r2.x, r2.x, r3.y
 116: frc r2.x, r2.x
 117: mad r2.x, r3.x, r2.x, r2.y
 118: mad r2.y, r2.x, l(34.000000), l(1.000000)
 119: mul r2.x, r2.x, r2.y
 120: mul r2.y, r2.x, l(289.000000)
 121: ge r2.y, r2.y, -r2.y
 122: movc r3.xy, r2.yyyy, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 123: mul r2.x, r2.x, r3.y
 124: frc r2.x, r2.x
 125: mul r2.x, r2.x, r3.x
 126: mul r2.x, r2.x, l(0.024390)
 127: frc r2.x, r2.x
 128: mad r2.xy, r2.xxxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -0.500000, 0.000000, 0.000000)
 129: round_ni r2.y, r2.y
 130: add r3.x, -r2.y, r2.x
 131: add r3.y, |r2.x|, l(-0.500000)
 132: dp2 r2.x, r3.xyxx, r3.xyxx
 133: rsq r2.x, r2.x
 134: mul r2.xy, r2.xxxx, r3.xyxx
 135: add r4.xyzw, r1.xyxy, l(-0.000000, -1.000000, -1.000000, -0.000000)
 136: dp2 r2.x, r2.xyxx, r4.xyxx
 137: movc r3.xyzw, r3.zwzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 138: mul r2.yz, r2.zzwz, r3.zzwz
 139: frc r2.yz, r2.yyzy
 140: mul r2.yz, r2.yyzy, r3.xxyx
 141: mad r2.w, r2.y, l(34.000000), l(1.000000)
 142: mul r2.y, r2.y, r2.w
 143: mul r2.w, r2.y, l(289.000000)
 144: ge r2.w, r2.w, -r2.w
 145: movc r3.xy, r2.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 146: mul r2.y, r2.y, r3.y
 147: frc r2.y, r2.y
 148: mad r2.y, r3.x, r2.y, r2.z
 149: mad r2.z, r2.y, l(34.000000), l(1.000000)
 150: mul r2.y, r2.y, r2.z
 151: mul r2.z, r2.y, l(289.000000)
 152: ge r2.z, r2.z, -r2.z
 153: movc r2.zw, r2.zzzz, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 154: mul r2.y, r2.w, r2.y
 155: frc r2.y, r2.y
 156: mul r2.y, r2.y, r2.z
 157: mul r2.y, r2.y, l(0.024390)
 158: frc r2.y, r2.y
 159: mad r2.yz, r2.yyyy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -0.500000, 0.000000)
 160: round_ni r2.z, r2.z
 161: add r3.x, -r2.z, r2.y
 162: add r3.y, |r2.y|, l(-0.500000)
 163: dp2 r2.y, r3.xyxx, r3.xyxx
 164: rsq r2.y, r2.y
 165: mul r2.yz, r2.yyyy, r3.xxyx
 166: dp2 r2.y, r2.yzyy, r4.zwzz
 167: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 168: mul r3.xyzw, r1.zwzw, l(289.000000, 289.000000, 289.000000, 289.000000)
 169: ge r3.xyzw, r3.xyzw, -r3.zwzw
 170: movc r3.xyzw, r3.xyzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 171: mul r1.zw, r1.zzzw, r3.zzzw
 172: frc r1.zw, r1.zzzw
 173: mul r1.zw, r1.zzzw, r3.xxxy
 174: mad r2.z, r1.z, l(34.000000), l(1.000000)
 175: mul r1.z, r1.z, r2.z
 176: mul r2.z, r1.z, l(289.000000)
 177: ge r2.z, r2.z, -r2.z
 178: movc r2.zw, r2.zzzz, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 179: mul r1.z, r1.z, r2.w
 180: frc r1.z, r1.z
 181: mad r1.z, r2.z, r1.z, r1.w
 182: mad r1.w, r1.z, l(34.000000), l(1.000000)
 183: mul r1.z, r1.z, r1.w
 184: mul r1.w, r1.z, l(289.000000)
 185: ge r1.w, r1.w, -r1.w
 186: movc r2.zw, r1.wwww, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 187: mul r1.z, r1.z, r2.w
 188: frc r1.z, r1.z
 189: mul r1.z, r1.z, r2.z
 190: mul r1.z, r1.z, l(0.024390)
 191: frc r1.z, r1.z
 192: mad r1.zw, r1.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -0.500000)
 193: round_ni r1.w, r1.w
 194: add r3.x, -r1.w, r1.z
 195: add r3.y, |r1.z|, l(-0.500000)
 196: dp2 r1.z, r3.xyxx, r3.xyxx
 197: rsq r1.z, r1.z
 198: mul r1.zw, r1.zzzz, r3.xxxy
 199: add r2.zw, r1.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
 200: dp2 r1.z, r1.zwzz, r2.zwzz
 201: mul r2.zw, r1.xxxy, r1.xxxy
 202: mul r2.zw, r1.xxxy, r2.zzzw
 203: mad r3.xy, r1.xyxx, l(6.000000, 6.000000, 0.000000, 0.000000), l(-15.000000, -15.000000, 0.000000, 0.000000)
 204: mad r1.xy, r1.xyxx, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
 205: mul r1.xy, r1.xyxx, r2.zwzz
 206: add r1.w, -r0.w, r2.x
 207: mad r0.w, r1.y, r1.w, r0.w
 208: add r1.z, -r2.y, r1.z
 209: mad r1.y, r1.y, r1.z, r2.y
 210: add r1.y, -r0.w, r1.y
 211: mad r0.w, r1.x, r1.y, r0.w
 212: add r0.w, r0.w, l(0.500000)
 213: mul o0.xyz, r0.wwww, r0.xyzx
 214: mov o0.w, l(1.000000)
 215: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 21 math
 Pass {
  Name "ShadowCaster"
  Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Geometry" "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Unlit" }
  ColorMask 0
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "$Globals" (1968 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _ShadowBias at 1936
  Vector3 _LightDirection at 1952
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[123], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mad r0.xyz, cb0[122].xyzx, cb0[121].xxxx, r0.xyzx
   5: dp3 r1.x, v1.xyzx, cb1[4].xyzx
   6: dp3 r1.y, v1.xyzx, cb1[5].xyzx
   7: dp3 r1.z, v1.xyzx, cb1[6].xyzx
   8: dp3 r0.w, r1.xyzx, r1.xyzx
   9: max r0.w, r0.w, l(0.000000)
  10: rsq r0.w, r0.w
  11: mul r1.xyz, r0.wwww, r1.xyzx
  12: dp3_sat r0.w, cb0[122].xyzx, r1.xyzx
  13: add r0.w, -r0.w, l(1.000000)
  14: mul r0.w, r0.w, cb0[121].y
  15: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  16: mov o1.xyz, r1.xyzx
  17: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
  18: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
  19: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
  20: add r0.xyzw, r0.xyzw, cb0[72].xyzw
  21: min o0.z, r0.w, r0.z
  22: mov o0.xyw, r0.xyxw
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 8 math
 Pass {
  Name "DepthOnly"
  Tags { "LIGHTMODE"="DepthOnly" "QUEUE"="Geometry" "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Unlit" }
  ColorMask 0
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 8 math, 2 temp registers
Uses vertex data channel "Vertex"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TANGENT                  0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_input v0.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[72].xyzw
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 22 math
 // Stats for Fragment shader:
 //        d3d11: 9 math
 Pass {
  Name "DepthNormals"
  Tags { "LIGHTMODE"="DepthNormals" "QUEUE"="Geometry" "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Unlit" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
      vs_5_0
      dcl_globalFlags refactoringAllowed
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[72].xyzw
   8: dp3 r0.x, v1.xyzx, cb1[4].xyzx
   9: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  10: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  11: dp3 r0.w, r0.xyzx, r0.xyzx
  12: max r0.w, r0.w, l(0.000000)
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  16: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  17: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: max r0.w, r0.w, l(0.000000)
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, v2.w
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 9 math, 1 temp registers
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_5_0
      dcl_globalFlags refactoringAllowed
      dcl_input_ps linear v1.xyz
      dcl_output o0.xyzw
      dcl_temps 1
   0: dp3 r0.x, v1.xyzx, v1.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v1.xyzx
   3: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   4: rcp r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mad r0.w, -r0.x, l(0.500000), l(0.500000)
   7: mad_sat r0.w, r0.y, l(0.500000), r0.w
   8: ge r0.z, r0.z, l(0.000000)
   9: add o0.y, r0.y, r0.x
  10: movc o0.x, r0.z, r0.w, -r0.w
  11: mov o0.zw, l(0,0,0,0)
  12: ret 
// Approximately 0 instruction slots used


 }
}
SubShader { 
 Tags { "QUEUE"="Geometry" "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Unlit" }


 // Stats for Vertex shader:
 //        d3d11: 15 math
 // Stats for Fragment shader:
 //        d3d11: 188 math, 2 branch
 Pass {
  Name "Pass"
  Tags { "QUEUE"="Geometry" "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Unlit" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[72].xyzw
   8: dp3 r0.x, v1.xyzx, cb1[4].xyzx
   9: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  10: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  11: dp3 r0.w, r0.xyzx, r0.xyzx
  12: max r0.w, r0.w, l(0.000000)
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o2.xyzw, v3.xyzw
  16: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 188 math, 5 temp registers, 2 branches
Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Vector4 Color_9f4daec392f74a02a7064da9f3c2d9b3 at 0
  Vector4 Color_009982248fff4eebb59edd722cd69bc9 at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: dp3 r0.x, v1.xyzx, v1.xyzx
   1: sqrt r0.x, r0.x
   2: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
   3: mul r0.xyz, r0.xxxx, v1.xyzx
   4: dp3 r0.w, r0.xyzx, r0.xyzx
   5: rsq r0.w, r0.w
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: dp3 r0.w, cb0[13].xyzx, cb0[13].xyzx
   8: rsq r0.w, r0.w
   9: mul r1.xyz, r0.wwww, cb0[13].xyzx
  10: dp3_sat r0.x, r0.xyzx, r1.xyzx
  11: add r0.x, -r0.x, l(1.000000)
  12: log r0.x, r0.x
  13: mul r0.x, r0.x, l(8.100000)
  14: exp r0.x, r0.x
  15: mul r0.x, r0.x, l(7.600000)
  16: mul r0.yz, v2.xxyx, l(0.000000, 6.000000, 6.000000, 0.000000)
  17: round_ni r1.xy, r0.yzyy
  18: frc r0.yz, r0.yyzy
  19: mov r1.zw, l(0,0,0,8.000000)
  20: mov r0.w, l(-1)
  21: loop 
  22:   ilt r2.x, l(1), r0.w
  23:   breakc_nz r2.x
  24:   itof r2.y, r0.w
  25:   mov r2.zw, r1.zzzw
  26:   mov r3.x, l(-1)
  27:   loop 
  28:     ilt r3.y, l(1), r3.x
  29:     breakc_nz r3.y
  30:     itof r2.x, r3.x
  31:     add r3.yz, r1.xxyx, r2.xxyx
  32:     dp2 r3.w, r3.yzyy, l(15.270000, 99.410004, 0.000000, 0.000000)
  33:     dp2 r3.y, r3.yzyy, l(47.630001, 89.980003, 0.000000, 0.000000)
  34:     sincos r4.xy, null, r3.ywyy
  35:     frc r3.yz, r4.xxyx
  36:     mul r3.yz, r3.yyzy, l(0.000000, 23.950001, 23.950001, 0.000000)
  37:     sincos r3.y, null, r3.y
  38:     mad r4.x, r3.y, l(0.500000), r2.x
  39:     sincos null, r2.x, r3.z
  40:     mad r4.y, r2.x, l(0.500000), r2.y
  41:     add r3.yz, -r0.yyzy, r4.xxyx
  42:     add r3.yz, r3.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  43:     dp2 r2.x, r3.yzyy, r3.yzyy
  44:     sqrt r2.x, r2.x
  45:     lt r3.y, r2.x, r2.w
  46:     movc r2.zw, r3.yyyy, r2.xxxx, r2.zzzw
  47:     iadd r3.x, r3.x, l(1)
  48:   endloop 
  49:   mov r1.zw, r2.zzzw
  50:   iadd r0.w, r0.w, l(1)
  51: endloop 
  52: mul r0.x, r0.x, r1.z
  53: mul r0.x, r0.x, l(0.360000)
  54: min r0.x, r0.x, l(1.000000)
  55: add r0.y, -r0.x, l(1.000000)
  56: dp3 r0.y, r0.yyyy, r0.yyyy
  57: sqrt r0.y, r0.y
  58: add r0.y, r0.y, l(-1.730000)
  59: mul_sat r0.y, r0.y, l(100000.000000)
  60: add r0.xzw, r0.xxxx, -cb1[0].xxyz
  61: mad r0.xyz, r0.yyyy, r0.xzwx, cb1[0].xyzx
  62: dp3 r0.w, -r0.xyzx, -r0.xyzx
  63: sqrt r0.w, r0.w
  64: mul r0.w, r0.w, l(33.333336)
  65: min r0.w, r0.w, l(1.000000)
  66: add r0.xyz, r0.xyzx, -cb1[1].xyzx
  67: mad r0.xyz, r0.wwww, r0.xyzx, cb1[1].xyzx
  68: mul r1.xy, r0.xyxx, l(-695.000000, -695.000000, 0.000000, 0.000000)
  69: round_ni r1.zw, r1.xxxy
  70: frc r1.xy, r1.xyxx
  71: mul r2.xyzw, r1.zwzw, l(289.000000, 289.000000, 289.000000, 289.000000)
  72: ge r2.xyzw, r2.xyzw, -r2.zwzw
  73: movc r2.xyzw, r2.xyzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
  74: mul r2.zw, r1.zzzw, r2.zzzw
  75: frc r2.zw, r2.zzzw
  76: mul r2.xy, r2.zwzz, r2.xyxx
  77: mad r0.w, r2.x, l(34.000000), l(1.000000)
  78: mul r0.w, r2.x, r0.w
  79: mul r2.x, r0.w, l(289.000000)
  80: ge r2.x, r2.x, -r2.x
  81: movc r2.xz, r2.xxxx, l(289.000000,0,0.003460,0), l(-289.000000,0,-0.003460,0)
  82: mul r0.w, r0.w, r2.z
  83: frc r0.w, r0.w
  84: mad r0.w, r2.x, r0.w, r2.y
  85: mad r2.x, r0.w, l(34.000000), l(1.000000)
  86: mul r0.w, r0.w, r2.x
  87: mul r2.x, r0.w, l(289.000000)
  88: ge r2.x, r2.x, -r2.x
  89: movc r2.xy, r2.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
  90: mul r0.w, r0.w, r2.y
  91: frc r0.w, r0.w
  92: mul r0.w, r0.w, r2.x
  93: mul r0.w, r0.w, l(0.024390)
  94: frc r0.w, r0.w
  95: mad r2.xy, r0.wwww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -0.500000, 0.000000, 0.000000)
  96: round_ni r0.w, r2.y
  97: add r3.x, -r0.w, r2.x
  98: add r3.y, |r2.x|, l(-0.500000)
  99: dp2 r0.w, r3.xyxx, r3.xyxx
 100: rsq r0.w, r0.w
 101: mul r2.xy, r0.wwww, r3.xyxx
 102: dp2 r0.w, r2.xyxx, r1.xyxx
 103: add r2.xyzw, r1.zwzw, l(0.000000, 1.000000, 1.000000, 0.000000)
 104: mul r3.xyzw, r2.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
 105: ge r3.xyzw, r3.xyzw, -r3.xyzw
 106: movc r4.xyzw, r3.xyxy, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 107: mul r2.xy, r2.xyxx, r4.zwzz
 108: frc r2.xy, r2.xyxx
 109: mul r2.xy, r2.xyxx, r4.xyxx
 110: mad r3.x, r2.x, l(34.000000), l(1.000000)
 111: mul r2.x, r2.x, r3.x
 112: mul r3.x, r2.x, l(289.000000)
 113: ge r3.x, r3.x, -r3.x
 114: movc r3.xy, r3.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 115: mul r2.x, r2.x, r3.y
 116: frc r2.x, r2.x
 117: mad r2.x, r3.x, r2.x, r2.y
 118: mad r2.y, r2.x, l(34.000000), l(1.000000)
 119: mul r2.x, r2.x, r2.y
 120: mul r2.y, r2.x, l(289.000000)
 121: ge r2.y, r2.y, -r2.y
 122: movc r3.xy, r2.yyyy, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 123: mul r2.x, r2.x, r3.y
 124: frc r2.x, r2.x
 125: mul r2.x, r2.x, r3.x
 126: mul r2.x, r2.x, l(0.024390)
 127: frc r2.x, r2.x
 128: mad r2.xy, r2.xxxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -0.500000, 0.000000, 0.000000)
 129: round_ni r2.y, r2.y
 130: add r3.x, -r2.y, r2.x
 131: add r3.y, |r2.x|, l(-0.500000)
 132: dp2 r2.x, r3.xyxx, r3.xyxx
 133: rsq r2.x, r2.x
 134: mul r2.xy, r2.xxxx, r3.xyxx
 135: add r4.xyzw, r1.xyxy, l(-0.000000, -1.000000, -1.000000, -0.000000)
 136: dp2 r2.x, r2.xyxx, r4.xyxx
 137: movc r3.xyzw, r3.zwzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 138: mul r2.yz, r2.zzwz, r3.zzwz
 139: frc r2.yz, r2.yyzy
 140: mul r2.yz, r2.yyzy, r3.xxyx
 141: mad r2.w, r2.y, l(34.000000), l(1.000000)
 142: mul r2.y, r2.y, r2.w
 143: mul r2.w, r2.y, l(289.000000)
 144: ge r2.w, r2.w, -r2.w
 145: movc r3.xy, r2.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 146: mul r2.y, r2.y, r3.y
 147: frc r2.y, r2.y
 148: mad r2.y, r3.x, r2.y, r2.z
 149: mad r2.z, r2.y, l(34.000000), l(1.000000)
 150: mul r2.y, r2.y, r2.z
 151: mul r2.z, r2.y, l(289.000000)
 152: ge r2.z, r2.z, -r2.z
 153: movc r2.zw, r2.zzzz, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 154: mul r2.y, r2.w, r2.y
 155: frc r2.y, r2.y
 156: mul r2.y, r2.y, r2.z
 157: mul r2.y, r2.y, l(0.024390)
 158: frc r2.y, r2.y
 159: mad r2.yz, r2.yyyy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -0.500000, 0.000000)
 160: round_ni r2.z, r2.z
 161: add r3.x, -r2.z, r2.y
 162: add r3.y, |r2.y|, l(-0.500000)
 163: dp2 r2.y, r3.xyxx, r3.xyxx
 164: rsq r2.y, r2.y
 165: mul r2.yz, r2.yyyy, r3.xxyx
 166: dp2 r2.y, r2.yzyy, r4.zwzz
 167: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 168: mul r3.xyzw, r1.zwzw, l(289.000000, 289.000000, 289.000000, 289.000000)
 169: ge r3.xyzw, r3.xyzw, -r3.zwzw
 170: movc r3.xyzw, r3.xyzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 171: mul r1.zw, r1.zzzw, r3.zzzw
 172: frc r1.zw, r1.zzzw
 173: mul r1.zw, r1.zzzw, r3.xxxy
 174: mad r2.z, r1.z, l(34.000000), l(1.000000)
 175: mul r1.z, r1.z, r2.z
 176: mul r2.z, r1.z, l(289.000000)
 177: ge r2.z, r2.z, -r2.z
 178: movc r2.zw, r2.zzzz, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 179: mul r1.z, r1.z, r2.w
 180: frc r1.z, r1.z
 181: mad r1.z, r2.z, r1.z, r1.w
 182: mad r1.w, r1.z, l(34.000000), l(1.000000)
 183: mul r1.z, r1.z, r1.w
 184: mul r1.w, r1.z, l(289.000000)
 185: ge r1.w, r1.w, -r1.w
 186: movc r2.zw, r1.wwww, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 187: mul r1.z, r1.z, r2.w
 188: frc r1.z, r1.z
 189: mul r1.z, r1.z, r2.z
 190: mul r1.z, r1.z, l(0.024390)
 191: frc r1.z, r1.z
 192: mad r1.zw, r1.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -0.500000)
 193: round_ni r1.w, r1.w
 194: add r3.x, -r1.w, r1.z
 195: add r3.y, |r1.z|, l(-0.500000)
 196: dp2 r1.z, r3.xyxx, r3.xyxx
 197: rsq r1.z, r1.z
 198: mul r1.zw, r1.zzzz, r3.xxxy
 199: add r2.zw, r1.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
 200: dp2 r1.z, r1.zwzz, r2.zwzz
 201: mul r2.zw, r1.xxxy, r1.xxxy
 202: mul r2.zw, r1.xxxy, r2.zzzw
 203: mad r3.xy, r1.xyxx, l(6.000000, 6.000000, 0.000000, 0.000000), l(-15.000000, -15.000000, 0.000000, 0.000000)
 204: mad r1.xy, r1.xyxx, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
 205: mul r1.xy, r1.xyxx, r2.zwzz
 206: add r1.w, -r0.w, r2.x
 207: mad r0.w, r1.y, r1.w, r0.w
 208: add r1.z, -r2.y, r1.z
 209: mad r1.y, r1.y, r1.z, r2.y
 210: add r1.y, -r0.w, r1.y
 211: mad r0.w, r1.x, r1.y, r0.w
 212: add r0.w, r0.w, l(0.500000)
 213: mul o0.xyz, r0.wwww, r0.xyzx
 214: mov o0.w, l(1.000000)
 215: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRLIGHTMAP_COMBINED 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v3.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[72].xyzw
   8: dp3 r0.x, v1.xyzx, cb1[4].xyzx
   9: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  10: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  11: dp3 r0.w, r0.xyzx, r0.xyzx
  12: max r0.w, r0.w, l(0.000000)
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o2.xyzw, v3.xyzw
  16: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 188 math, 5 temp registers, 2 branches
Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Vector3 _WorldSpaceCameraPos at 208
}
Constant Buffer "UnityPerMaterial" (32 bytes) on slot 1 {
  Vector4 Color_9f4daec392f74a02a7064da9f3c2d9b3 at 0
  Vector4 Color_009982248fff4eebb59edd722cd69bc9 at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: dp3 r0.x, v1.xyzx, v1.xyzx
   1: sqrt r0.x, r0.x
   2: div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
   3: mul r0.xyz, r0.xxxx, v1.xyzx
   4: dp3 r0.w, r0.xyzx, r0.xyzx
   5: rsq r0.w, r0.w
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: dp3 r0.w, cb0[13].xyzx, cb0[13].xyzx
   8: rsq r0.w, r0.w
   9: mul r1.xyz, r0.wwww, cb0[13].xyzx
  10: dp3_sat r0.x, r0.xyzx, r1.xyzx
  11: add r0.x, -r0.x, l(1.000000)
  12: log r0.x, r0.x
  13: mul r0.x, r0.x, l(8.100000)
  14: exp r0.x, r0.x
  15: mul r0.x, r0.x, l(7.600000)
  16: mul r0.yz, v2.xxyx, l(0.000000, 6.000000, 6.000000, 0.000000)
  17: round_ni r1.xy, r0.yzyy
  18: frc r0.yz, r0.yyzy
  19: mov r1.zw, l(0,0,0,8.000000)
  20: mov r0.w, l(-1)
  21: loop 
  22:   ilt r2.x, l(1), r0.w
  23:   breakc_nz r2.x
  24:   itof r2.y, r0.w
  25:   mov r2.zw, r1.zzzw
  26:   mov r3.x, l(-1)
  27:   loop 
  28:     ilt r3.y, l(1), r3.x
  29:     breakc_nz r3.y
  30:     itof r2.x, r3.x
  31:     add r3.yz, r1.xxyx, r2.xxyx
  32:     dp2 r3.w, r3.yzyy, l(15.270000, 99.410004, 0.000000, 0.000000)
  33:     dp2 r3.y, r3.yzyy, l(47.630001, 89.980003, 0.000000, 0.000000)
  34:     sincos r4.xy, null, r3.ywyy
  35:     frc r3.yz, r4.xxyx
  36:     mul r3.yz, r3.yyzy, l(0.000000, 23.950001, 23.950001, 0.000000)
  37:     sincos r3.y, null, r3.y
  38:     mad r4.x, r3.y, l(0.500000), r2.x
  39:     sincos null, r2.x, r3.z
  40:     mad r4.y, r2.x, l(0.500000), r2.y
  41:     add r3.yz, -r0.yyzy, r4.xxyx
  42:     add r3.yz, r3.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  43:     dp2 r2.x, r3.yzyy, r3.yzyy
  44:     sqrt r2.x, r2.x
  45:     lt r3.y, r2.x, r2.w
  46:     movc r2.zw, r3.yyyy, r2.xxxx, r2.zzzw
  47:     iadd r3.x, r3.x, l(1)
  48:   endloop 
  49:   mov r1.zw, r2.zzzw
  50:   iadd r0.w, r0.w, l(1)
  51: endloop 
  52: mul r0.x, r0.x, r1.z
  53: mul r0.x, r0.x, l(0.360000)
  54: min r0.x, r0.x, l(1.000000)
  55: add r0.y, -r0.x, l(1.000000)
  56: dp3 r0.y, r0.yyyy, r0.yyyy
  57: sqrt r0.y, r0.y
  58: add r0.y, r0.y, l(-1.730000)
  59: mul_sat r0.y, r0.y, l(100000.000000)
  60: add r0.xzw, r0.xxxx, -cb1[0].xxyz
  61: mad r0.xyz, r0.yyyy, r0.xzwx, cb1[0].xyzx
  62: dp3 r0.w, -r0.xyzx, -r0.xyzx
  63: sqrt r0.w, r0.w
  64: mul r0.w, r0.w, l(33.333336)
  65: min r0.w, r0.w, l(1.000000)
  66: add r0.xyz, r0.xyzx, -cb1[1].xyzx
  67: mad r0.xyz, r0.wwww, r0.xyzx, cb1[1].xyzx
  68: mul r1.xy, r0.xyxx, l(-695.000000, -695.000000, 0.000000, 0.000000)
  69: round_ni r1.zw, r1.xxxy
  70: frc r1.xy, r1.xyxx
  71: mul r2.xyzw, r1.zwzw, l(289.000000, 289.000000, 289.000000, 289.000000)
  72: ge r2.xyzw, r2.xyzw, -r2.zwzw
  73: movc r2.xyzw, r2.xyzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
  74: mul r2.zw, r1.zzzw, r2.zzzw
  75: frc r2.zw, r2.zzzw
  76: mul r2.xy, r2.zwzz, r2.xyxx
  77: mad r0.w, r2.x, l(34.000000), l(1.000000)
  78: mul r0.w, r2.x, r0.w
  79: mul r2.x, r0.w, l(289.000000)
  80: ge r2.x, r2.x, -r2.x
  81: movc r2.xz, r2.xxxx, l(289.000000,0,0.003460,0), l(-289.000000,0,-0.003460,0)
  82: mul r0.w, r0.w, r2.z
  83: frc r0.w, r0.w
  84: mad r0.w, r2.x, r0.w, r2.y
  85: mad r2.x, r0.w, l(34.000000), l(1.000000)
  86: mul r0.w, r0.w, r2.x
  87: mul r2.x, r0.w, l(289.000000)
  88: ge r2.x, r2.x, -r2.x
  89: movc r2.xy, r2.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
  90: mul r0.w, r0.w, r2.y
  91: frc r0.w, r0.w
  92: mul r0.w, r0.w, r2.x
  93: mul r0.w, r0.w, l(0.024390)
  94: frc r0.w, r0.w
  95: mad r2.xy, r0.wwww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -0.500000, 0.000000, 0.000000)
  96: round_ni r0.w, r2.y
  97: add r3.x, -r0.w, r2.x
  98: add r3.y, |r2.x|, l(-0.500000)
  99: dp2 r0.w, r3.xyxx, r3.xyxx
 100: rsq r0.w, r0.w
 101: mul r2.xy, r0.wwww, r3.xyxx
 102: dp2 r0.w, r2.xyxx, r1.xyxx
 103: add r2.xyzw, r1.zwzw, l(0.000000, 1.000000, 1.000000, 0.000000)
 104: mul r3.xyzw, r2.xyzw, l(289.000000, 289.000000, 289.000000, 289.000000)
 105: ge r3.xyzw, r3.xyzw, -r3.xyzw
 106: movc r4.xyzw, r3.xyxy, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 107: mul r2.xy, r2.xyxx, r4.zwzz
 108: frc r2.xy, r2.xyxx
 109: mul r2.xy, r2.xyxx, r4.xyxx
 110: mad r3.x, r2.x, l(34.000000), l(1.000000)
 111: mul r2.x, r2.x, r3.x
 112: mul r3.x, r2.x, l(289.000000)
 113: ge r3.x, r3.x, -r3.x
 114: movc r3.xy, r3.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 115: mul r2.x, r2.x, r3.y
 116: frc r2.x, r2.x
 117: mad r2.x, r3.x, r2.x, r2.y
 118: mad r2.y, r2.x, l(34.000000), l(1.000000)
 119: mul r2.x, r2.x, r2.y
 120: mul r2.y, r2.x, l(289.000000)
 121: ge r2.y, r2.y, -r2.y
 122: movc r3.xy, r2.yyyy, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 123: mul r2.x, r2.x, r3.y
 124: frc r2.x, r2.x
 125: mul r2.x, r2.x, r3.x
 126: mul r2.x, r2.x, l(0.024390)
 127: frc r2.x, r2.x
 128: mad r2.xy, r2.xxxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -0.500000, 0.000000, 0.000000)
 129: round_ni r2.y, r2.y
 130: add r3.x, -r2.y, r2.x
 131: add r3.y, |r2.x|, l(-0.500000)
 132: dp2 r2.x, r3.xyxx, r3.xyxx
 133: rsq r2.x, r2.x
 134: mul r2.xy, r2.xxxx, r3.xyxx
 135: add r4.xyzw, r1.xyxy, l(-0.000000, -1.000000, -1.000000, -0.000000)
 136: dp2 r2.x, r2.xyxx, r4.xyxx
 137: movc r3.xyzw, r3.zwzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 138: mul r2.yz, r2.zzwz, r3.zzwz
 139: frc r2.yz, r2.yyzy
 140: mul r2.yz, r2.yyzy, r3.xxyx
 141: mad r2.w, r2.y, l(34.000000), l(1.000000)
 142: mul r2.y, r2.y, r2.w
 143: mul r2.w, r2.y, l(289.000000)
 144: ge r2.w, r2.w, -r2.w
 145: movc r3.xy, r2.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
 146: mul r2.y, r2.y, r3.y
 147: frc r2.y, r2.y
 148: mad r2.y, r3.x, r2.y, r2.z
 149: mad r2.z, r2.y, l(34.000000), l(1.000000)
 150: mul r2.y, r2.y, r2.z
 151: mul r2.z, r2.y, l(289.000000)
 152: ge r2.z, r2.z, -r2.z
 153: movc r2.zw, r2.zzzz, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 154: mul r2.y, r2.w, r2.y
 155: frc r2.y, r2.y
 156: mul r2.y, r2.y, r2.z
 157: mul r2.y, r2.y, l(0.024390)
 158: frc r2.y, r2.y
 159: mad r2.yz, r2.yyyy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -0.500000, 0.000000)
 160: round_ni r2.z, r2.z
 161: add r3.x, -r2.z, r2.y
 162: add r3.y, |r2.y|, l(-0.500000)
 163: dp2 r2.y, r3.xyxx, r3.xyxx
 164: rsq r2.y, r2.y
 165: mul r2.yz, r2.yyyy, r3.xxyx
 166: dp2 r2.y, r2.yzyy, r4.zwzz
 167: add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
 168: mul r3.xyzw, r1.zwzw, l(289.000000, 289.000000, 289.000000, 289.000000)
 169: ge r3.xyzw, r3.xyzw, -r3.zwzw
 170: movc r3.xyzw, r3.xyzw, l(289.000000,289.000000,0.003460,0.003460), l(-289.000000,-289.000000,-0.003460,-0.003460)
 171: mul r1.zw, r1.zzzw, r3.zzzw
 172: frc r1.zw, r1.zzzw
 173: mul r1.zw, r1.zzzw, r3.xxxy
 174: mad r2.z, r1.z, l(34.000000), l(1.000000)
 175: mul r1.z, r1.z, r2.z
 176: mul r2.z, r1.z, l(289.000000)
 177: ge r2.z, r2.z, -r2.z
 178: movc r2.zw, r2.zzzz, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 179: mul r1.z, r1.z, r2.w
 180: frc r1.z, r1.z
 181: mad r1.z, r2.z, r1.z, r1.w
 182: mad r1.w, r1.z, l(34.000000), l(1.000000)
 183: mul r1.z, r1.z, r1.w
 184: mul r1.w, r1.z, l(289.000000)
 185: ge r1.w, r1.w, -r1.w
 186: movc r2.zw, r1.wwww, l(0,0,289.000000,0.003460), l(0,0,-289.000000,-0.003460)
 187: mul r1.z, r1.z, r2.w
 188: frc r1.z, r1.z
 189: mul r1.z, r1.z, r2.z
 190: mul r1.z, r1.z, l(0.024390)
 191: frc r1.z, r1.z
 192: mad r1.zw, r1.zzzz, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -0.500000)
 193: round_ni r1.w, r1.w
 194: add r3.x, -r1.w, r1.z
 195: add r3.y, |r1.z|, l(-0.500000)
 196: dp2 r1.z, r3.xyxx, r3.xyxx
 197: rsq r1.z, r1.z
 198: mul r1.zw, r1.zzzz, r3.xxxy
 199: add r2.zw, r1.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
 200: dp2 r1.z, r1.zwzz, r2.zwzz
 201: mul r2.zw, r1.xxxy, r1.xxxy
 202: mul r2.zw, r1.xxxy, r2.zzzw
 203: mad r3.xy, r1.xyxx, l(6.000000, 6.000000, 0.000000, 0.000000), l(-15.000000, -15.000000, 0.000000, 0.000000)
 204: mad r1.xy, r1.xyxx, r3.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
 205: mul r1.xy, r1.xyxx, r2.zwzz
 206: add r1.w, -r0.w, r2.x
 207: mad r0.w, r1.y, r1.w, r0.w
 208: add r1.z, -r2.y, r1.z
 209: mad r1.y, r1.y, r1.z, r2.y
 210: add r1.y, -r0.w, r1.y
 211: mad r0.w, r1.x, r1.y, r0.w
 212: add r0.w, r0.w, l(0.500000)
 213: mul o0.xyz, r0.wwww, r0.xyzx
 214: mov o0.w, l(1.000000)
 215: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 21 math
 Pass {
  Name "ShadowCaster"
  Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Geometry" "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Unlit" }
  ColorMask 0
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 21 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "$Globals" (1968 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
  Vector4 _ShadowBias at 1936
  Vector3 _LightDirection at 1952
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[123], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mad r0.xyz, cb0[122].xyzx, cb0[121].xxxx, r0.xyzx
   5: dp3 r1.x, v1.xyzx, cb1[4].xyzx
   6: dp3 r1.y, v1.xyzx, cb1[5].xyzx
   7: dp3 r1.z, v1.xyzx, cb1[6].xyzx
   8: dp3 r0.w, r1.xyzx, r1.xyzx
   9: max r0.w, r0.w, l(0.000000)
  10: rsq r0.w, r0.w
  11: mul r1.xyz, r0.wwww, r1.xyzx
  12: dp3_sat r0.w, cb0[122].xyzx, r1.xyzx
  13: add r0.w, -r0.w, l(1.000000)
  14: mul r0.w, r0.w, cb0[121].y
  15: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  16: mov o1.xyz, r1.xyzx
  17: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
  18: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
  19: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
  20: add r0.xyzw, r0.xyzw, cb0[72].xyzw
  21: min o0.z, r0.w, r0.z
  22: mov o0.xyw, r0.xyxw
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 8 math
 Pass {
  Name "DepthOnly"
  Tags { "LIGHTMODE"="DepthOnly" "QUEUE"="Geometry" "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Unlit" }
  ColorMask 0
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 8 math, 2 temp registers
Uses vertex data channel "Vertex"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float       
// TANGENT                  0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_input v0.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[72].xyzw
   8: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 22 math
 // Stats for Fragment shader:
 //        d3d11: 10 math
 Pass {
  Name "DepthNormals"
  Tags { "LIGHTMODE"="DepthNormals" "QUEUE"="Geometry" "RenderType"="Opaque" "RenderPipeline"="UniversalPipeline" "UniversalMaterialType"="Unlit" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (1952 bytes) on slot 0 {
  Matrix4x4 unity_MatrixVP at 1104
}
Constant Buffer "UnityPerDraw" (384 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[73], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_input v0.xyz
      dcl_input v1.xyz
      dcl_input v2.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: add r0.xyz, r0.xyzx, cb1[3].xyzx
   4: mul r1.xyzw, r0.yyyy, cb0[70].xyzw
   5: mad r1.xyzw, cb0[69].xyzw, r0.xxxx, r1.xyzw
   6: mad r0.xyzw, cb0[71].xyzw, r0.zzzz, r1.xyzw
   7: add o0.xyzw, r0.xyzw, cb0[72].xyzw
   8: dp3 r0.x, v1.xyzx, cb1[4].xyzx
   9: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  10: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  11: dp3 r0.w, r0.xyzx, r0.xyzx
  12: max r0.w, r0.w, l(0.000000)
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  16: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  17: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  18: dp3 r0.w, r0.xyzx, r0.xyzx
  19: max r0.w, r0.w, l(0.000000)
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, v2.w
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 10 math, 1 temp registers
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_input_ps linear v1.xyz
      dcl_output o0.xyzw
      dcl_temps 1
   0: dp3 r0.x, v1.xyzx, v1.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v1.xyzx
   3: dp3 r0.w, |r0.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
   4: div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mad r0.w, -r0.x, l(0.500000), l(0.500000)
   7: mad_sat r0.w, r0.y, l(0.500000), r0.w
   8: ge r0.z, r0.z, l(0.000000)
   9: add o0.y, r0.y, r0.x
  10: movc o0.x, r0.z, r0.w, -r0.w
  11: mov o0.zw, l(0,0,0,0)
  12: ret 
// Approximately 0 instruction slots used


 }
}
Fallback "Hidden/Shader Graph/FallbackError"
}